## Bash Functions

## Git Functions
function syncupstreamfunction() 
{
    git checkout develop && git pull upstream develop && git push
}
function newbranchfunction() 
{
    git checkout develop && git pull upstream develop && git push && git checkout -b $1
}
function prepbranchfunction() 
{
    if [ -n "$(git status --porcelain)" ]; then
        echo "You must commit your changes first.";
    else
        branch_name="$(git symbolic-ref HEAD 2>/dev/null)" ||
        branch_name="(unnamed branch)"     # detached HEAD
        branch_name=${branch_name##refs/heads/}
        
        git checkout develop && git pull upstream develop && git push && git checkout $branch_name && git merge develop
    fi
}
function pushbranchfunction() 
{
    if [ -n "$(git status --porcelain)" ]; then
        echo "You must commit your changes first.";
    else
        branch_name="$(git symbolic-ref HEAD 2>/dev/null)" ||
        branch_name="(unnamed branch)"     # detached HEAD
        branch_name=${branch_name##refs/heads/}
    
        git checkout develop && git merge $branch_name && git push
    fi
}
# Git add with or without fzf
function gitAdd() 
{
    if [ "$1" = "-f" ]; then
        git add $(find . | fzf -m);
    else
        git add "$1";
    fi
}
## Handy Extract Program
function extract() 
{
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1     ;;
            *.tar.gz)    tar xvzf $1     ;;
            *.bz2)       bunzip2 $1      ;;
            *.rar)       unrar x $1      ;;
            *.gz)        gunzip $1       ;;
            *.tar)       tar xvf $1      ;;
            *.tbz2)      tar xvjf $1     ;;
            *.tgz)       tar xvzf $1     ;;
            *.zip)       unzip $1        ;;
            *.Z)         uncompress $1   ;;
            *.7z)        7z x $1         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}
## Creates an archive (*.tar.gz) from given directory.
function tarthis() 
{ 
    tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; 
}
## Create a ZIP archive of a file or folder.
function zipthis() 
{ 
    zip -r "${1%%/}.zip" "$1" ; 
}
